apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-guardian
  labels:
{{ include "chart.labels" . | indent 4 }}
spec:
  replicas: 1
      #{{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "chart.name" . }}-guardian
      app.kubernetes.io/instance: {{ .Release.Name }}-guardian
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "chart.name" . }}-guardian
        app.kubernetes.io/instance: {{ .Release.Name }}-guardian
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports: []
          livenessProbe:
            exec:
              command:
              - ls
              - /
            failureThreshold: 5
            initialDelaySeconds: 15
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            exec:
              command:
              - ls
              - /
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          - name: APP_MODE
            value: guardian
          - name: ODAHUB
            value: "{{ .Values.oda.crux }}"
          - name: ODA_SPARQL_ROOT
            value: "http://fuseki.internal.odahub.io/dataanalysis"
          - name: LOGSTASH_ENTRYPOINT
            value: {{ .Values.oda.logstash_entrypoint }}
          - name: DQUEUE_DATABASE_URL
            valueFrom:
              secretKeyRef:
                name: dqueue-database-url
                key: url.txt
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
